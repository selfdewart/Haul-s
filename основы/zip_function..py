# Функция zip () используется для совмещения двух и более
# списков в один. Она возвращает итератор кортежей, где 
# i-ый кортеж содержит i-ый элемент из каждого из переданных
# списков. x = [1, 2, 3] y = [4, 5, 6] zipped = zip (x, y) 
# print (list (zipped)) # Выведет: [(1, 4), (2, 5), (3, 6)].
# Также функция zip () может быть использована для 
# «расстегивания» списка кортежей обратно в отдельные 
# списки. Для этого используется оператор «*».
# Функция zip() используется для совмещения двух и более списков в один. Она возвращает итератор кортежей, где i-ый кортеж содержит i-ый элемент из каждого из переданных списков.

x = [1, 2, 3]
y = [4, 5, 6]
zipped = zip(x, y)
print(list(zipped)) 
# Выведет: [(1, 4), (2, 5), (3, 6)]

# Также функция zip() может быть использована для «расстегивания» списка кортежей обратно в отдельные списки. Для этого используется оператор «*». Он позволяет преобразовать список в набор аргументов для функции.

zipped = [(1, 4), (2, 5), (3, 6)]
x, y = zip(*zipped)
print(list(x)) 
# Выведет: [1, 2, 3]
print(list(y)) 
# Выведет: [4, 5, 6]


# Таким образом, для преобразования списка кортежей в два списка можно использовать следующий код:

data = [('a', 1), ('b', 2), ('c', 3), ('d', 4)]
x, y = zip(*data)
result = (list(x), list(y))
print(result) 
# Выведет: (['a', 'b', 'c', 'd'], [1, 2, 3, 4])

#В этом коде функция zip() с оператором «*» преобразует 
# список кортежей в два отдельных кортежа. Затем каждый из 
# этих кортежей преобразуется в список с помощью функции 
# list().

# еще один метод но можно обойтись прости зипом
a = [5, 6, 7, 8]

b = [100, 200, 300, 400]

for i in range(4):
    print(a[i], b[i])

